
@test
subroutine oneElement()
	use mult
	use pfunit_mod
	implicit none
	real (kind = 8) :: mat1(1,1),mat2(1,1)
	real(kind = 8), allocatable :: result(:,:)
	integer :: status
	allocate(result(1,1))
	mat1 = 2
	mat2 = 3
	call mm(mat1,mat2,result,status)
	@assertEqual(result(1,1),6)
	deallocate(result)
end

@test
subroutine nToOne_matrix()
	use mult
	use pfunit_mod

	real (kind = 8) :: mat1(50,1),mat2(1,50)
	real(kind = 8), allocatable :: result(:,:),res(:,:)
	integer :: status
	integer :: mx1_s(2)	
	integer :: mx2_s(2)	

	mx1_s = shape(mat1)
    mx2_s = shape(mat2)

	mat1 = 1
	mat2 = 1

	allocate(result(mx2_s(1),mx1_s(2)))
	allocate(res(mx2_s(1),mx1_s(2)))

	res = 50

	call mm(mat1,mat2,result,status)
	@assertEqual(res,result)
	deallocate(res,result)
end

@test
subroutine oneToN_matrix()
	use mult
	use pfunit_mod

	real (kind = 8) :: mat1(1,50),mat2(50,1)
	real(kind = 8), allocatable :: result(:,:),res(:,:)
	integer :: status
	integer :: mx1_s(2)	
	integer :: mx2_s(2)	

	mx1_s = shape(mat1)
    mx2_s = shape(mat2)

	mat1 = 1
	mat2 = 1

	allocate(result(mx2_s(1),mx1_s(2)))
	allocate(res(mx2_s(1),mx1_s(2)))

	res = 1

	call mm(mat1,mat2,result,status)
	@assertEqual(res,result)
	deallocate(res,result)
end


@test
subroutine wrongSize()
use mult
	use pfunit_mod

	real (kind = 8) :: mat1(123,123),mat2(124,124)
	real(kind = 8), allocatable :: result(:,:),res(:,:)
	integer :: status
	integer :: mx1_s(2)	
	integer :: mx2_s(2)	

	mx1_s = shape(mat1)
    mx2_s = shape(mat2)

	mat1 = 1
	mat2 = 1

	allocate(result(mx2_s(1),mx1_s(2)))

	call mm(mat1,mat2,result,status)
	@assertEqual(status,1)
	deallocate(result)

end

@test
subroutine standard()
use mult
	use pfunit_mod

	real (kind = 8) :: mat1(2,2),mat2(1,2)
	real(kind = 8), allocatable :: result(:,:),res(:,:)
	integer :: status
	integer :: mx1_s(2)	
	integer :: mx2_s(2)	

	mx1_s = shape(mat1)
    mx2_s = shape(mat2)

	mat1 = 2
	mat2(1,1) = 3
	mat2(1,2) = 4

	allocate(result(mx2_s(1),mx1_s(2)))
	allocate(res(mx2_s(1),mx1_s(2)))

	res = 14

	call mm(mat1,mat2,result,status)
	@assertEqual(res,result)
	deallocate(res,result)

end



